#!/usr/bin/env ruby

require 'octodown'
require 'octodown/support/file_chooser'
require 'optparse'
require 'launchy'

include Octodown

# Default options
options = {
  port: 8887,
  presenter: :server,
  style: :github,
  stdin: false
}

OptionParser.new do |opts|
  opts.banner = 'Usage: octodown [options]'

  opts.on_tail '--version', 'Show version' do
    puts "octodown v#{Octodown::VERSION}"
    exit
  end

  opts.on(
    '-s', '--style [STYLE]', %i[github atom], 'Choose style (atom, github)'
  ) do |s|
    options[:style] = s
  end

  opts.on '--stdin', 'Read from STDIN' do
    options[:stdin] = true
  end

  opts.on '-r', '--raw', 'Print raw HTML to STDOUT' do
    options[:presenter] = :raw
  end

  opts.on '-l', '--live-reload', 'Start a LiveReload server' do
    options[:presenter] = :server
  end

  opts.on '-h', '--html', 'Render to HTML' do
    options[:presenter] = :html
  end

  opts.on(
    '-P', '--port [PORT]', "LiveReload port (default: #{options[:port]})"
  ) do |port|
    options[:presenter] = :server
    options[:port] = port.to_i
  end

  opts.on_tail '-h', '--help', 'Show this message' do
    puts opts
    exit
  end
end.parse!

require 'tty-prompt'

TUI = TTY::Prompt.new(enable_color: true)

options[:file] = if ARGF.file == STDIN && options[:stdin]
                   STDIN
                 elsif ARGF.file != STDIN
                   ARGF.file
                 else
                   FileChooser.new(prompt: TUI).choose_file
                 end

Octodown.call options
